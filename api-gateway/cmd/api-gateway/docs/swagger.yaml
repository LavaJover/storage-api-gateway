basePath: /api/v1
definitions:
  main.authOkResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    type: object
  main.createBoxOkResponse:
    properties:
      cell_id:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  main.createCellOkResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      storage_id:
        type: integer
    type: object
  main.createStorageOkResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  main.getBoxesOkResponse:
    properties:
      boxes:
        items:
          properties:
            cell_id:
              type: integer
            id:
              type: integer
            name:
              type: string
          type: object
        type: array
    type: object
  main.getCellsOkResponse:
    properties:
      cells:
        items:
          properties:
            id:
              type: integer
            name:
              type: string
            storage_id:
              type: integer
          type: object
        type: array
    type: object
  main.getStoragesOkResponse:
    properties:
      storages:
        items:
          properties:
            id:
              type: integer
            name:
              type: string
            user_id:
              type: integer
          type: object
        type: array
    type: object
  main.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.registerRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.validateJWTOkResponse:
    properties:
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: API for storage-api-gateway
  title: Storage-Master API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user using email and password
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.loginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.authOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Wrong credentials
          schema:
            type: string
        "500":
          description: SSO service failed
          schema:
            type: string
      summary: Login user
      tags:
      - login
  /auth/reg:
    post:
      consumes:
      - application/json
      description: Register new user using email and password
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.authOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "409":
          description: Email is already taken
          schema:
            type: string
        "500":
          description: SSO service failed
          schema:
            type: string
      summary: Register new user
      tags:
      - signup
  /auth/valid:
    post:
      consumes:
      - application/json
      description: Validate JWT passed in HTTP POST request header by Bearer scheme
      parameters:
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.validateJWTOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: SSO service failed
          schema:
            type: string
      summary: Validate JWT
      tags:
      - valid
  /boxes:
    get:
      consumes:
      - application/json
      description: Get all boxes related to given cell_id checking user permissions
      parameters:
      - description: Cell ID
        in: query
        name: cell_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.getBoxesOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "403":
          description: You don't have enough permissions
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Get boxes by cell_id
      tags:
      - boxes
    post:
      consumes:
      - application/json
      description: Create new named box connected to cell
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.createBoxOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Create new box
      tags:
      - boxes
  /cells:
    get:
      consumes:
      - application/json
      description: Get all cells by given storage_id with permission checking
      parameters:
      - description: Storage ID
        in: query
        name: storage_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.getCellsOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "403":
          description: You don't have enough permissions
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Get cells by storage_id
      tags:
      - cells
    post:
      consumes:
      - application/json
      description: Create new named cell connected to storage to store boxes
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.createCellOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Create new cell
      tags:
      - cells
  /storages:
    get:
      consumes:
      - application/json
      description: Get all storage instances related to the given user_id
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.getStoragesOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "403":
          description: You dont't have enough permissions
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Get storages by user_id
      tags:
      - storages
    post:
      consumes:
      - application/json
      description: Create new named storage to store cells
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.createStorageOkResponse'
        "400":
          description: Bad request
          schema:
            type: string
        "405":
          description: Method is not supported
          schema:
            type: string
        "500":
          description: Storage service failed
          schema:
            type: string
      summary: Create new storage
      tags:
      - storages
swagger: "2.0"
